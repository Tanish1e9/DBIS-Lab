{"ast":null,"code":"var _jsxFileName = \"/home/tanish/Documents/database lab/lab5-files/frontend/src/pages/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { apiUrl } from \"../config/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate(); // Use this to redirect users\n\n  // useEffect checks if the user is already logged in\n  // if already loggedIn then it will simply navigate to the dashboard\n  // TODO: Implement the checkStatus function.\n  useEffect(() => {\n    const checkStatus = async () => {\n      // Implement your lo  gic here\n      try {\n        const response = await fetch('/isLoggedIn', {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        // Check if the response is not successful (status code 200-299)\n        if (response.status = 200) {\n          return navigate(\"/dashboard\");\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    checkStatus();\n  }, []);\n\n  // Read about useState to manage form data\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  // TODO: This function handles input field changes\n  const handleChange = e => {\n    // Implement your logic here\n  };\n\n  // TODO: Implement the login operation\n  // This function should send form data to the server\n  // and handle login success/failure responses.\n  // Use the API you made for handling this.\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Implement the login logic here\n  };\n\n  // TODO: Use JSX to create a login form with input fields for:\n  // - Email\n  // - Password\n  // - A submit button\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"WSlUXCuQ3D5jeyjyF2F/zSQDlck=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","apiUrl","jsxDEV","_jsxDEV","Login","_s","navigate","checkStatus","response","fetch","method","credentials","headers","status","error","console","formData","setFormData","email","password","handleChange","e","handleSubmit","preventDefault","children","type","id","name","required","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","$RefreshReg$"],"sources":["/home/tanish/Documents/database lab/lab5-files/frontend/src/pages/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { apiUrl } from \"../config/config\";\n\nconst Login = () => {\n  const navigate = useNavigate(); // Use this to redirect users\n\n\n  // useEffect checks if the user is already logged in\n  // if already loggedIn then it will simply navigate to the dashboard\n  // TODO: Implement the checkStatus function.\n  useEffect(() => {\n    const checkStatus = async () => {\n      // Implement your lo  gic here\n      try {\n        const response = await fetch('/isLoggedIn',\n          {\n            method: \"GET\",\n            credentials: \"include\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        // Check if the response is not successful (status code 200-299)\n        if (response.status = 200) {\n          return navigate(\"/dashboard\");\n        }\n      } catch (error) {\n        console.error(error);\n      }    \n      \n    };\n    checkStatus();\n  }, []);\n\n  // Read about useState to manage form data\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  // TODO: This function handles input field changes\n  const handleChange = (e) => {\n    // Implement your logic here\n  };\n\n  // TODO: Implement the login operation\n  // This function should send form data to the server\n  // and handle login success/failure responses.\n  // Use the API you made for handling this.\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // Implement the login logic here\n  };\n\n  // TODO: Use JSX to create a login form with input fields for:\n  // - Email\n  // - Password\n  // - A submit button\n  return (\n    <div>      \n        <input type=\"email\" id=\"email\" name=\"email\" required/>\n        <input type=\"password\" id=\"password\" name=\"password\" required/>\n        <button type=\"submit\">Login</button>\n        <form>\n          <label>Name: <input type=\"text\" name=\"name\" /></label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}