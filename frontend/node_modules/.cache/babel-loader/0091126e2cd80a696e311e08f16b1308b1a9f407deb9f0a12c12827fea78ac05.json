{"ast":null,"code":"var _jsxFileName = \"/home/tanish/Documents/database lab/lab5-files/frontend/src/pages/Products.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Navbar from \"../components/Navbar\";\nimport { apiUrl } from \"../config/config\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Products = () => {\n  _s();\n  const navigate = useNavigate(); // Use this to redirect users\n\n  // TODO: Implement the checkStatus function.\n  // This function should check if the user is logged in.\n  // If not logged in, redirect to the login page.\n  // if logged in, fetch the products\n  useEffect(() => {\n    const checkStatus = async () => {\n      try {\n        const response = await fetch(`${apiUrl}/isLoggedIn`, {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          return navigate('/login');\n        } else {\n          fetchProducts();\n        }\n      } catch (error) {\n        console.error(error);\n        return navigate('/notfound');\n      }\n    };\n    checkStatus();\n  }, [navigate]);\n\n  // Read about useState to understand how to manage component state\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setfilteredProducts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [quantities, setquantities] = useState({});\n  const [errormessages, seterrormessages] = useState({});\n  const [cartmessages, setCartMessages] = useState({});\n\n  // NOTE: You are free to add more states and/or handler functions\n  // to implement the features that are required for this assignment\n\n  // TODO: Fetch products from the APIx\n  // This function should send a GET request to fetch products\n  const fetchProducts = async () => {\n    // Implement the API call here to fetch product data\n    try {\n      const response = await fetch(`${apiUrl}/list-products`, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setProducts(data.products);\n        setfilteredProducts(data.products);\n      } else {\n        return navigate('/notfound');\n      }\n    } catch (error) {\n      console.log(error);\n      return navigate('/notfound');\n    }\n  };\n\n  // TODO: Implement the product quantity change function\n  // If the user clicks on plus (+), then increase the quantity by 1\n  // If the user clicks on minus (-), then decrease the quantity by 1\n  const handleQuantityChange = (productId, change, stock) => {\n    setquantities(prevQuantities => {\n      const newQuantity = (prevQuantities[productId] || 0) + change;\n      if (newQuantity > stock) {\n        seterrormessages(errormessages => ({\n          ...errormessages,\n          [productId]: \"Not enough stock\"\n        }));\n      } else {\n        seterrormessages(errormessages => ({\n          ...errormessages,\n          [productId]: null\n        }));\n      }\n      return {\n        ...prevQuantities,\n        [productId]: newQuantity\n      };\n    });\n  };\n\n  // TODO: Add the product with the given productId to the cart\n  // the quantity of this product can be accessed by using a state\n  // use the API you implemented earlier\n  // display appropriate error messages if any\n  const addToCart = async productId => {\n    try {\n      if (quantities[productId] === 0) {\n        setCartMessages(prevMessages => ({\n          ...prevMessages,\n          [productId]: \"Enter a non-zero quantity!\"\n        }));\n      } else {\n        const response = await fetch(`${apiUrl}/add-to-cart`, {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            product_id: productId,\n            quantity: quantities[productId] || 0\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setCartMessages(prevMessages => ({\n            ...prevMessages,\n            [productId]: (quantities[productId] || 0) > 0 ? \"Added successfully!\" : \"Removed successfully!\"\n          }));\n        } else {\n          console.log(data.message);\n          setCartMessages(prevMessages => ({\n            ...prevMessages,\n            [productId]: \"Failed to add!\"\n          }));\n        }\n      }\n      setTimeout(() => {\n        setCartMessages({\n          ...prevMessages,\n          [productId]: null\n        });\n      }, 3000);\n      setquantities(prevQuantities => ({\n        ...prevQuantities,\n        [productId]: 0\n      }));\n    } catch (error) {\n      console.log(error);\n      return navigate('/notfound');\n    }\n  };\n\n  // TODO: Implement the search functionality\n  const handleSearch = e => {\n    e.preventDefault();\n    // Implement the search logic here\n    // use Array.prototype.filter to filter the products\n    // that match with the searchTerm\n    setfilteredProducts(products.filter(elem => elem.name === searchTerm || searchTerm === \"\"));\n  };\n\n  // TODO: Display products with a table\n  // Display each product's details, such as ID, name, price, stock, etc.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Product List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by product name...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stock Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredProducts.length > 0 ? filteredProducts.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.product_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 71\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.stock_quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 95\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleQuantityChange(product.product_id, 1, product.stock_quantity),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), quantities[product.product_id] || 0, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleQuantityChange(product.product_id, -1, product.stock_quantity),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), errormessages[product.product_id] && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: errormessages[product.product_id]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => addToCart(product.product_id),\n                children: \"Add to cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), cartmessages[product.product_id] && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: cartmessages[product.product_id]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 54\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 6,\n              children: \"No products found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Products, \"ymBVfR3vNaLAn+Y26eDBu4gRki4=\", false, function () {\n  return [useNavigate];\n});\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Navbar","apiUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","Products","_s","navigate","checkStatus","response","fetch","method","credentials","headers","ok","fetchProducts","error","console","products","setProducts","filteredProducts","setfilteredProducts","searchTerm","setSearchTerm","quantities","setquantities","errormessages","seterrormessages","cartmessages","setCartMessages","data","json","log","handleQuantityChange","productId","change","stock","prevQuantities","newQuantity","addToCart","prevMessages","body","JSON","stringify","product_id","quantity","message","setTimeout","handleSearch","e","preventDefault","filter","elem","name","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","length","map","product","index","price","stock_quantity","colSpan","_c","$RefreshReg$"],"sources":["/home/tanish/Documents/database lab/lab5-files/frontend/src/pages/Products.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Navbar from \"../components/Navbar\";\nimport { apiUrl } from \"../config/config\";\n\nconst Products = () => {\n  const navigate = useNavigate(); // Use this to redirect users\n\n  // TODO: Implement the checkStatus function.\n  // This function should check if the user is logged in.\n  // If not logged in, redirect to the login page.\n  // if logged in, fetch the products\n  useEffect(() => {\n    const checkStatus = async () => {\n      try {\n        const response = await fetch(`${apiUrl}/isLoggedIn`,\n          {\n            method: \"GET\",\n            credentials: \"include\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        if (!response.ok) {\n            return navigate('/login');\n        }\n        else{\n            fetchProducts();\n        }\n      } catch (error) {\n        console.error(error);\n        return navigate('/notfound');\n      }  \n    };\n    checkStatus();\n  }, [navigate]);\n\n  // Read about useState to understand how to manage component state\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setfilteredProducts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [quantities, setquantities] = useState({});\n  const [errormessages, seterrormessages] = useState({});  \n  const [cartmessages, setCartMessages] = useState({});\n\n  // NOTE: You are free to add more states and/or handler functions\n  // to implement the features that are required for this assignment\n\n  // TODO: Fetch products from the APIx\n  // This function should send a GET request to fetch products\n  const fetchProducts = async () => {\n    // Implement the API call here to fetch product data\n    try{\n      const response = await fetch(`${apiUrl}/list-products`,{\n        method : \"GET\",\n        credentials : \"include\",\n        headers : {\n          \"Content-Type\" : \"application/json\",\n        },\n      });\n      const data = await response.json();\n\n      if(response.ok){\n        setProducts(data.products);\n        setfilteredProducts(data.products);\n      }\n      else{\n        return navigate('/notfound');\n      }\n    }catch(error){\n      console.log(error);\n      return navigate('/notfound');\n    }\n  };\n  \n  // TODO: Implement the product quantity change function\n  // If the user clicks on plus (+), then increase the quantity by 1\n  // If the user clicks on minus (-), then decrease the quantity by 1\n  const handleQuantityChange = (productId, change, stock) => {\n      setquantities((prevQuantities) => {\n        const newQuantity =  (prevQuantities[productId] || 0) + change;\n        if(newQuantity > stock){\n          seterrormessages((errormessages) => ({...errormessages,[productId]:\"Not enough stock\"}));\n        }\n        else{\n          seterrormessages((errormessages) => ({...errormessages,[productId]:null}));\n        }\n        return {...prevQuantities, [productId]: newQuantity}\n    });\n  }\n\n  // TODO: Add the product with the given productId to the cart\n  // the quantity of this product can be accessed by using a state\n  // use the API you implemented earlier\n  // display appropriate error messages if any\n  const addToCart = async (productId) => {\n    try{\n      if(quantities[productId]===0){\n        setCartMessages((prevMessages) => ({\n          ...prevMessages,\n          [productId]: \"Enter a non-zero quantity!\",\n        }));\n      }\n      else{\n        const response = await fetch(`${apiUrl}/add-to-cart`,{\n          method : \"POST\",\n          credentials : \"include\",\n          headers: {\n            \"Content-Type\" : \"application/json\"\n          },\n          body: JSON.stringify({\n            product_id : productId,\n            quantity : quantities[productId] || 0\n          })\n        });\n        const data = await response.json();\n        if(response.ok){\n              setCartMessages((prevMessages) => ({\n                ...prevMessages,\n                [productId]: (quantities[productId] || 0) > 0 ? \"Added successfully!\" : \"Removed successfully!\",\n              }));\n        }\n        else{\n              console.log(data.message);\n              setCartMessages((prevMessages) => ({\n                ...prevMessages,\n                [productId]: \"Failed to add!\",\n              }));\n        }\n      }\n      setTimeout(() => {\n        setCartMessages({\n          ...prevMessages,\n          [productId]: null,\n        });\n      }, 3000);\n\n      setquantities((prevQuantities)=>({\n        ...prevQuantities,\n        [productId]:0,\n      }));\n    }catch(error){\n      console.log(error);\n      return navigate('/notfound');\n    }\n  }\n\n  // TODO: Implement the search functionality\n  const handleSearch = (e) => {\n    e.preventDefault();\n    // Implement the search logic here\n    // use Array.prototype.filter to filter the products\n    // that match with the searchTerm\n    setfilteredProducts(products.filter(elem => elem.name === searchTerm || searchTerm === \"\"));\n  };\n\n\n  // TODO: Display products with a table\n  // Display each product's details, such as ID, name, price, stock, etc.\n  return (\n    <>\n      <Navbar />\n      <div>\n        <h1>Product List</h1>\n        {/* Implement the search form */}\n        <form onSubmit={handleSearch}>\n          <input\n            type=\"text\"\n            placeholder=\"Search by product name...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n          <button type=\"submit\" onClick = {handleSearch}>Search</button>\n        </form>\n        <table>\n          <thead>\n            <tr>\n              <th>Product ID</th>\n              <th>Product Name</th>\n              <th>Price</th>\n              <th>Stock Available</th>\n              <th>Quantity</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredProducts.length>0 ? (filteredProducts.map((product, index) => (\n              <tr><td>{product.product_id}</td><td>{product.name}</td><td>{product.price}</td><td>{product.stock_quantity}</td>\n              <td>\n                <button onClick={() => handleQuantityChange(product.product_id,1,product.stock_quantity)}>+</button>\n                {quantities[product.product_id] || 0}\n                <button onClick={() => handleQuantityChange(product.product_id,-1,product.stock_quantity)}>-</button>\n                {errormessages[product.product_id] && <p>{errormessages[product.product_id]}</p>}\n              </td>\n              <td>\n                <button onClick={() => addToCart(product.product_id)}>Add to cart</button>\n                {cartmessages[product.product_id] && <p>{cartmessages[product.product_id]}</p>}\n              </td>\n              </tr>\n            ))) : <tr><td colSpan={6}>No products found</td></tr>}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default Products;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}