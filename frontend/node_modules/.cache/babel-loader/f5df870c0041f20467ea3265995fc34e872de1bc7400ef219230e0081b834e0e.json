{"ast":null,"code":"var _jsxFileName = \"/home/tanish/Documents/database lab/lab5-files/frontend/src/pages/Cart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, use } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { apiUrl } from \"../config/config\";\nimport \"../css/Cart.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const navigate = useNavigate();\n  // TODO: Implement the checkStatus function\n  // If the user is already logged in, fetch the cart.\n  // If not, redirect to the login page.\n  useEffect(() => {\n    const checkStatus = async () => {\n      // Implement your logic to check if the user is logged in\n      // If logged in, fetch the cart data, otherwise navigate to /login\n      try {\n        const response = await fetch(`${apiUrl}/isLoggedIn`, {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (response.ok) {} else {\n          return navigate('/login');\n        }\n      } catch (error) {\n        console.error(error);\n        return navigate('/notfound');\n      }\n    };\n    checkStatus();\n  }, [navigate]);\n\n  // TODO: Manage cart state with useState\n  // cart: Stores the items in the cart\n  const [cart, setCart] = useState([]);\n  // totalPrice: Stores the total price of all cart items\n  const [totalPrice, setTotalPrice] = useState(0);\n  // error: Stores any error messages (if any)\n  const [error, setError] = useState(null);\n  // message: Stores success or info messages\n  const [message, setMessage] = useState(null);\n\n  // TODO: Implement the fetchCart function\n  // This function should fetch the user's cart data and update the state variables\n  const fetchCart = async () => {\n    // Implement your logic to fetch the cart data\n    // Use the API endpoint to get the user's cart\n    const response = await fetch('/display-cart');\n    const data = response.json();\n  };\n\n  // TODO: Implement the updateQuantity function\n  // This function should handle increasing or decreasing item quantities\n  // based on user input. Make sure it doesn't exceed stock limits.\n  const updateQuantity = async (productId, change, currentQuantity, stockQuantity) => {\n    // Implement your logic for quantity update\n    // Validate quantity bounds and update the cart via API\n  };\n\n  // TODO: Implement the removeFromCart function\n  // This function should remove an item from the cart when the \"Remove\" button is clicked\n  const removeFromCart = async productId => {\n    // Implement your logic to remove an item from the cart\n    // Use the appropriate API call to handle this\n  };\n\n  // TODO: Implement the handleCheckout function\n  // This function should handle the checkout process and validate the address fields\n  // If the user is ready to checkout, place the order and navigate to order confirmation\n  const handleCheckout = async () => {\n    // Implement your logic for checkout, validate address and place order\n    // Make sure to clear the cart after successful checkout\n  };\n\n  // TODO: Implement the handlePinCodeChange function\n  // This function should fetch the city and state based on pincode entered by the user\n  const handlePinCodeChange = async e => {\n    // Implement the logic to fetch city and state by pincode\n    // Update the city and state fields accordingly\n  };\n\n  // TODO: Display error messages if any error occurs\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-cart-message\",\n        children: \"Your cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"cart-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Stock Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: cart.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {}, item.item_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-total\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Total: $\", totalPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCheckout,\n            disabled: cart.length === 0,\n            children: \"Proceed to Checkout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Cart, \"5FXzkdGX4WQepLXP2eXf1ONepMk=\", false, function () {\n  return [useNavigate];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","use","useNavigate","apiUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","Cart","_s","navigate","checkStatus","response","fetch","method","credentials","headers","ok","error","console","cart","setCart","totalPrice","setTotalPrice","setError","message","setMessage","fetchCart","data","json","updateQuantity","productId","change","currentQuantity","stockQuantity","removeFromCart","handleCheckout","handlePinCodeChange","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","item_id","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/tanish/Documents/database lab/lab5-files/frontend/src/pages/Cart.jsx"],"sourcesContent":["import React, { useState, useEffect, use } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { apiUrl } from \"../config/config\";\nimport \"../css/Cart.css\";\n\nconst Cart = () => {\n  const navigate = useNavigate();\n  // TODO: Implement the checkStatus function\n  // If the user is already logged in, fetch the cart.\n  // If not, redirect to the login page.\n  useEffect(() => {\n    const checkStatus = async () => {\n      // Implement your logic to check if the user is logged in\n      // If logged in, fetch the cart data, otherwise navigate to /login\n      try {\n        const response = await fetch(`${apiUrl}/isLoggedIn`,\n          {\n            method: \"GET\",\n            credentials: \"include\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        if (response.ok) {\n        }\n        else{\n          return navigate('/login');\n        }\n      } catch (error) {\n        console.error(error);\n        return navigate('/notfound');\n      } \n    };\n    checkStatus();\n  }, [navigate]);\n\n  // TODO: Manage cart state with useState\n  // cart: Stores the items in the cart\n  const [cart,setCart] = useState([]);\n  // totalPrice: Stores the total price of all cart items\n  const [totalPrice,setTotalPrice] = useState(0);\n  // error: Stores any error messages (if any)\n  const [error, setError] = useState(null);\n  // message: Stores success or info messages\n  const [message, setMessage] = useState(null);\n\n  // TODO: Implement the fetchCart function\n  // This function should fetch the user's cart data and update the state variables\n  const fetchCart = async () => {\n    // Implement your logic to fetch the cart data\n    // Use the API endpoint to get the user's cart\n    const response = await fetch('/display-cart');\n    const data = response.json();\n  };\n\n  // TODO: Implement the updateQuantity function\n  // This function should handle increasing or decreasing item quantities\n  // based on user input. Make sure it doesn't exceed stock limits.\n  const updateQuantity = async (productId, change, currentQuantity, stockQuantity) => {\n    // Implement your logic for quantity update\n    // Validate quantity bounds and update the cart via API\n  };\n\n  // TODO: Implement the removeFromCart function\n  // This function should remove an item from the cart when the \"Remove\" button is clicked\n  const removeFromCart = async (productId) => {\n    // Implement your logic to remove an item from the cart\n    // Use the appropriate API call to handle this\n  };\n\n  // TODO: Implement the handleCheckout function\n  // This function should handle the checkout process and validate the address fields\n  // If the user is ready to checkout, place the order and navigate to order confirmation\n  const handleCheckout = async () => {\n    // Implement your logic for checkout, validate address and place order\n    // Make sure to clear the cart after successful checkout\n  };\n\n  // TODO: Implement the handlePinCodeChange function\n  // This function should fetch the city and state based on pincode entered by the user\n  const handlePinCodeChange = async (e) => {\n    // Implement the logic to fetch city and state by pincode\n    // Update the city and state fields accordingly\n  };\n\n  // TODO: Display error messages if any error occurs\n  if (error) {\n    return <div className=\"cart-error\">{error}</div>;\n  }\n\n  return (\n    <>\n      <div className=\"cart-container\">\n        <h1>Your Cart</h1>\n\n        {/* TODO: Display the success or info message */}\n        {message && <div className=\"cart-message\">{message}</div>}\n\n        {/* TODO: Implement the cart table UI */}\n        {/* If cart is empty, display an empty cart message */}\n        {cart.length === 0 ? (\n          <p className=\"empty-cart-message\">Your cart is empty</p>\n        ) : (\n          <>\n            <table className=\"cart-table\">\n              <thead>\n                <tr>\n                  <th>Product</th>\n                  <th>Price</th>\n                  <th>Stock Available</th>\n                  <th>Quantity</th>\n                  <th>Total</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {/* TODO: Render cart items dynamically */}\n                {/* Use map() to render each cart item */}\n                {cart.map((item) => (\n                  <tr key={item.item_id}>\n                    {/* TODO: Render product details here */}\n                    {/* Display item name, price, stock, quantity, and total */}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n\n            {/* TODO: Implement the address form */}\n            {/* Allow users to input pincode, street, city, and state */}\n            <form>\n              {/* Implement address fields */}\n            </form>\n\n            {/* TODO: Display total price and the checkout button */}\n            <div className=\"cart-total\">\n              {/* Display the total price */}\n              <h3>Total: ${totalPrice}</h3>\n              {/* Checkout button should be enabled only if there are items in the cart */}\n              <button onClick={handleCheckout} disabled={cart.length === 0}>\n                Proceed to Checkout\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Cart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}