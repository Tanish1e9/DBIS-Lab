{"ast":null,"code":"var _jsxFileName = \"/home/tanish/Documents/database lab/lab5-files/frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Navbar from \"../components/Navbar\";\nimport { apiUrl } from \"../config/config\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = props => {\n  _s();\n  const navigate = useNavigate(); // Use this to redirect users\n  const location = useLocation();\n  const [username, setUsername] = useState(\"User\");\n\n  // TODO: Implement the checkStatus function.\n  // This function should check if the user is logged in.\n  // If not logged in, redirect to the login page.\n  useEffect(() => {\n    var _location$state;\n    const checkStatus = async () => {\n      // Implement API call here to check login status\n      // If logged in, then use setUsername to display\n      // the username\n      try {\n        const response = await fetch(`${apiUrl}/isLoggedIn`, {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          return navigate(\"/login\");\n        } else {}\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    checkStatus();\n    setUsername(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username) || \"User\");\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hi \", username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Welcome to the Ecommerce App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"0uQ6uRjVaqG9QBNweAMiyHZtqSI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Navbar","apiUrl","useLocation","jsxDEV","_jsxDEV","Dashboard","props","_s","navigate","location","username","setUsername","_location$state","checkStatus","response","fetch","method","credentials","headers","ok","error","console","state","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tanish/Documents/database lab/lab5-files/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Navbar from \"../components/Navbar\";\nimport { apiUrl } from \"../config/config\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Dashboard = (props) => {\n  const navigate = useNavigate(); // Use this to redirect users\n  const location = useLocation();\n  const [username, setUsername] = useState(\"User\");\n\n  // TODO: Implement the checkStatus function.\n  // This function should check if the user is logged in.\n  // If not logged in, redirect to the login page.\n  useEffect(() => {\n    const checkStatus = async () => {\n      // Implement API call here to check login status\n      // If logged in, then use setUsername to display\n      // the username\n      try {\n        const response = await fetch(`${apiUrl}/isLoggedIn`,\n          {\n            method: \"GET\",\n            credentials: \"include\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        if (!response.ok) {\n          return navigate(\"/login\");\n        }\n        else{}\n      } catch (error) {\n        console.error(error);\n      }   \n    };\n    checkStatus();\n    setUsername(location.state?.username || \"User\");\n  }, [navigate]);\n\n\n  return (\n    <div>\n      <Navbar />\n      <h1>Hi {username}!</h1>\n      <div>Welcome to the Ecommerce App</div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,cAAc;AAC1C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMU,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,MAAM,CAAC;;EAEhD;EACA;EACA;EACAC,SAAS,CAAC,MAAM;IAAA,IAAAc,eAAA;IACd,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B;MACA;MACA;MACA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGd,MAAM,aAAa,EACjD;UACEe,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE,SAAS;UACtBC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CACF,CAAC;QACD,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UAChB,OAAOX,QAAQ,CAAC,QAAQ,CAAC;QAC3B,CAAC,MACG,CAAC;MACP,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDP,WAAW,CAAC,CAAC;IACbF,WAAW,CAAC,EAAAC,eAAA,GAAAH,QAAQ,CAACa,KAAK,cAAAV,eAAA,uBAAdA,eAAA,CAAgBF,QAAQ,KAAI,MAAM,CAAC;EACjD,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAGd,oBACEJ,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACJ,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVvB,OAAA;MAAAmB,QAAA,GAAI,KAAG,EAACb,QAAQ,EAAC,GAAC;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBvB,OAAA;MAAAmB,QAAA,EAAK;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAACpB,EAAA,CA3CIF,SAAS;EAAA,QACIN,WAAW,EACXG,WAAW;AAAA;AAAA0B,EAAA,GAFxBvB,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}