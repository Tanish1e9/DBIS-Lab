{"ast":null,"code":"var _jsxFileName = \"/home/tanish/Documents/database lab/lab5-files/frontend/src/pages/Products.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Navbar from \"../components/Navbar\";\nimport { apiUrl } from \"../config/config\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Products = () => {\n  _s();\n  const navigate = useNavigate(); // Use this to redirect users\n\n  // TODO: Implement the checkStatus function.\n  // This function should check if the user is logged in.\n  // If not logged in, redirect to the login page.\n  // if logged in, fetch the products\n  useEffect(() => {\n    const checkStatus = async () => {\n      // Implement API call here to check login status\n    };\n    checkStatus();\n  }, []);\n\n  // Read about useState to understand how to manage component state\n  const [products, setProducts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // NOTE: You are free to add more states and/or handler functions\n  // to implement the features that are required for this assignment\n\n  // TODO: Fetch products from the APIx\n  // This function should send a GET request to fetch products\n  const fetchProducts = async () => {\n    // Implement the API call here to fetch product data\n    try {\n      const response = await fetch(`${apiUrl}/list-products`);\n      const data = response.json();\n      if (response.ok) {\n        setProducts(data.products);\n      } else {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.log(error);\n      navigate('/notfound');\n    }\n  };\n\n  // TODO: Implement the product quantity change function\n  // If the user clicks on plus (+), then increase the quantity by 1\n  // If the user clicks on minus (-), then decrease the quantity by 1\n  const handleQuantityChange = (productId, change) => {};\n\n  // TODO: Add the product with the given productId to the cart\n  // the quantity of this product can be accessed by using a state\n  // use the API you implemented earlier\n  // display appropriate error messages if any\n  const addToCart = productId => {};\n\n  // TODO: Implement the search functionality\n  const handleSearch = e => {\n    e.preventDefault();\n    // Implement the search logic here\n    // use Array.prototype.filter to filter the products\n    // that match with the searchTerm\n    products.filter(elem => elem.name === searchTerm);\n  };\n\n  // TODO: Display products with a table\n  // Display each product's details, such as ID, name, price, stock, etc.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Product List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by product name...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Stock Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [(product_id, name, price, stock_quantity /* Map over the products array to display each product */), products.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"product.product_id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"product.name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"product.price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 67\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Products, \"nw7HWDR6ZCnGy1lg2UEYBd7JJe0=\", false, function () {\n  return [useNavigate];\n});\n_c = Products;\nexport default Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Navbar","apiUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","Products","_s","navigate","checkStatus","products","setProducts","searchTerm","setSearchTerm","fetchProducts","response","fetch","data","json","ok","error","console","log","handleQuantityChange","productId","change","addToCart","handleSearch","e","preventDefault","filter","elem","name","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","product_id","price","stock_quantity","map","product","index","_c","$RefreshReg$"],"sources":["/home/tanish/Documents/database lab/lab5-files/frontend/src/pages/Products.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Navbar from \"../components/Navbar\";\nimport { apiUrl } from \"../config/config\";\n\nconst Products = () => {\n  const navigate = useNavigate(); // Use this to redirect users\n\n  // TODO: Implement the checkStatus function.\n  // This function should check if the user is logged in.\n  // If not logged in, redirect to the login page.\n  // if logged in, fetch the products\n  useEffect(() => {\n    const checkStatus = async () => {\n      // Implement API call here to check login status\n    };\n    checkStatus();\n  }, []);\n\n  // Read about useState to understand how to manage component state\n  const [products, setProducts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // NOTE: You are free to add more states and/or handler functions\n  // to implement the features that are required for this assignment\n\n  // TODO: Fetch products from the APIx\n  // This function should send a GET request to fetch products\n  const fetchProducts = async () => {\n    // Implement the API call here to fetch product data\n    try{\n      const response = await fetch(`${apiUrl}/list-products`);\n      const data = response.json();\n\n      if(response.ok){\n        setProducts(data.products);\n      }\n      else{\n        navigate('/login');\n      }\n    }catch(error){\n      console.log(error);\n      navigate('/notfound');\n    }\n  };\n  \n  // TODO: Implement the product quantity change function\n  // If the user clicks on plus (+), then increase the quantity by 1\n  // If the user clicks on minus (-), then decrease the quantity by 1\n  const handleQuantityChange = (productId, change) => {\n\n  }\n\n  // TODO: Add the product with the given productId to the cart\n  // the quantity of this product can be accessed by using a state\n  // use the API you implemented earlier\n  // display appropriate error messages if any\n  const addToCart = (productId) => {\n\n  }\n\n  // TODO: Implement the search functionality\n  const handleSearch = (e) => {\n    e.preventDefault();\n    // Implement the search logic here\n    // use Array.prototype.filter to filter the products\n    // that match with the searchTerm\n    products.filter(elem => elem.name === searchTerm);\n  };\n\n\n  // TODO: Display products with a table\n  // Display each product's details, such as ID, name, price, stock, etc.\n  return (\n    <>\n      <Navbar />\n      <div>\n        <h1>Product List</h1>\n        {/* Implement the search form */}\n        <form onSubmit={handleSearch}>\n          <input\n            type=\"text\"\n            placeholder=\"Search by product name...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n          <button type=\"submit\" onClick = {handleSearch}>Search</button>\n        </form>\n        <table>\n          <thead>\n            <tr>\n              <th>Product ID</th>\n              <th>Product Name</th>\n              <th>Price</th>\n              <th>Stock Available</th>\n            </tr>\n          </thead>\n          <tbody>\n            {product_id,name,price,stock_quantity/* Map over the products array to display each product */}\n\n            {products.map((product, index) => (\n              <tr><td>product.product_id</td><td>product.name</td><td>product.price</td></tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default Products;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}