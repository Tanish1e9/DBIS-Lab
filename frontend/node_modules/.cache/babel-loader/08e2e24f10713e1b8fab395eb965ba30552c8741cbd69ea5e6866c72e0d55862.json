{"ast":null,"code":"var _jsxFileName = \"/home/tanish/Documents/database lab/lab5-files/frontend/src/pages/Cart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, use } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Navbar from \"../components/Navbar\";\nimport { apiUrl } from \"../config/config\";\nimport \"../css/Cart.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const navigate = useNavigate();\n  // TODO: Implement the checkStatus function\n  // If the user is already logged in, fetch the cart.\n  // If not, redirect to the login page.\n  useEffect(() => {\n    const checkStatus = async () => {\n      // Implement your logic to check if the user is logged in\n      // If logged in, fetch the cart data, otherwise navigate to /login\n      try {\n        const response = await fetch(`${apiUrl}/isLoggedIn`, {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (response.ok) {\n          fetchCart();\n        } else {\n          return navigate('/login');\n        }\n      } catch (error) {\n        console.error(error);\n        return navigate('/notfound');\n      }\n    };\n    checkStatus();\n  }, []);\n\n  // TODO: Manage cart state with useState\n  // cart: Stores the items in the cart\n  const [cart, setCart] = useState([]);\n  // totalPrice: Stores the total price of all cart items\n  const [totalPrice, setTotalPrice] = useState(0);\n  // error: Stores any error messages (if any)\n  const [error, setError] = useState(null);\n  // message: Stores success or info messages\n  const [message, setMessage] = useState(null);\n  const [errors, seterrors] = useState({});\n  const [formData, setFormData] = useState({\n    pincode: \"\",\n    state: \"\",\n    city: \"\",\n    street: \"\"\n  });\n  const [formerror, setformerror] = useState(null);\n\n  // TODO: Implement the fetchCart function\n  // This function should fetch the user's cart data and update the state variables\n  const fetchCart = async () => {\n    // Implement your logic to fetch the cart data\n    // Use the API endpoint to get the user's cart\n    try {\n      const response = await fetch(`${apiUrl}/display-cart`, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setTotalPrice(data.totalPrice);\n        setCart(data.cart);\n        setError(null);\n        for (const row of data.cart) {\n          if (row.quantity > row.stock_quantity) {\n            seterrors(preverrors => ({\n              ...preverrors,\n              [row.item_id]: \"Exceeds stock quantity\"\n            }));\n          }\n        }\n      } else {\n        setError(data.message);\n      }\n      setMessage(data.message);\n    } catch (error) {\n      console.log(error);\n      return navigate('/notfound');\n    }\n  };\n\n  // TODO: Implement the updateQuantity function\n  // This function should handle increasing or decreasing item quantities\n  // based on user input. Make sure it doesn't exceed stock limits.\n  const updateQuantity = async (productId, change, currentQuantity, stockQuantity) => {\n    // Implement your logic for quantity update\n    // Validate quantity bounds and update the cart via API\n    if (currentQuantity + change > stockQuantity) {\n      seterrors(preverrors => ({\n        ...preverrors,\n        [productId]: \"Exceeds stock quantity\"\n      }));\n      setTimeout(() => {\n        seterrors({\n          ...errors,\n          [productId]: null\n        });\n      }, 3000);\n    } else {\n      seterrors(preverrors => ({\n        ...preverrors,\n        [productId]: null\n      }));\n    }\n    if (currentQuantity + change <= stockQuantity || change === -1) {\n      try {\n        const response = await fetch(`${apiUrl}/update-cart`, {\n          method: \"POST\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            product_id: productId,\n            quantity: change\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          setError(data.message);\n        } else {\n          setError(null);\n          fetchCart();\n        }\n      } catch (error) {\n        console.log(error);\n        return navigate(\"/notfound\");\n      }\n    }\n  };\n\n  // TODO: Implement the removeFromCart function\n  // This function should remove an item from the cart when the \"Remove\" button is clicked\n  const removeFromCart = async productId => {\n    // Implement your logic to remove an item from the cart\n    // Use the appropriate API call to handle this\n    try {\n      const response = await fetch(`${apiUrl}/remove-from-cart`, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          product_id: productId\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        console.log(data.message);\n        setError(data.message);\n      } else {\n        setError(null);\n        fetchCart();\n      }\n    } catch (error) {\n      console.log(error);\n      return navigate(\"/notfound\");\n    }\n  };\n\n  // TODO: Implement the handleCheckout function\n  // This function should handle the checkout process and validate the address fields\n  // If the user is ready to checkout, place the order and navigate to order confirmation\n  const handleCheckout = async () => {\n    // Implement your logic for checkout, validate address and place order\n    // Make sure to clear the cart after successful checkout\n    try {\n      const response = await fetch(`${apiUrl}/place-order`, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: {\n          city: formData.city,\n          state: formData.state,\n          pincode: formData.pincode,\n          street: formData.street\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        return navigate(\"/order-confirmation\");\n      } else {\n        setError(data.message);\n      }\n    } catch (error) {\n      console.log(error);\n      navigate(\"/notfound\");\n    }\n  };\n\n  // TODO: Implement the handlePinCodeChange function\n  // This function should fetch the city and state based on pincode entered by the user\n  const handlePinCodeChange = async e => {\n    // Implement the logic to fetch city and state by pincode\n    // Update the city and state fields accordingly\n    setFormData({\n      ...formData,\n      pincode: e.target.value\n    });\n    try {\n      const response = await fetch(`${apiUrl}/fetch-pincode?pincode=${e.target.value}`, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setFormData({\n          ...formData,\n          state: data.state,\n          city: data.name\n        });\n        setformerror(null);\n      } else {\n        setformerror(\"Invalid PINCODE\");\n      }\n    } catch (error) {\n      console.log(error);\n      return navigate(\"/notfound\");\n    }\n  };\n\n  // TODO: Display error messages if any error occurs\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 5\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-cart-message\",\n        children: \"Your cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"cart-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Stock Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: cart.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.stock_quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 52\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => updateQuantity(item.item_id, 1, item.quantity, item.stock_quantity),\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 12\n                }, this), item.quantity, /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => updateQuantity(item.item_id, -1, item.quantity, item.stock_quantity),\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 12\n                }, this), errors[item.item_id] && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: errors[item.item_id]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.total_price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => removeFromCart(item.item_id),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 38\n              }, this)]\n            }, item.item_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 10\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Pincode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"pincode\",\n            onBlur: handlePinCodeChange,\n            placeholder: \"Enter pincode\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 132\n          }, this), formerror && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: formerror\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Street:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"street\",\n            onChange: e => setFormData({\n              ...formData,\n              [e.target.name]: e.target.value\n            }),\n            placeholder: \"Enter street\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 173\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"city\",\n            value: formData.city,\n            placeholder: \"Enter city\",\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 116\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"State:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"state\",\n            value: formData.state,\n            placeholder: \"Enter state\",\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 120\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-total\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Total: $\", totalPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 8\n          }, this), cart.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCheckout,\n            disabled: cart.length === 0,\n            children: \"Proceed to Checkout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 27\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(Cart, \"DEvABJVdK6Q7P6vMmBNMgTCtbs8=\", false, function () {\n  return [useNavigate];\n});\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","use","useNavigate","Navbar","apiUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","Cart","_s","navigate","checkStatus","response","fetch","method","credentials","headers","ok","fetchCart","error","console","cart","setCart","totalPrice","setTotalPrice","setError","message","setMessage","errors","seterrors","formData","setFormData","pincode","state","city","street","formerror","setformerror","data","json","row","quantity","stock_quantity","preverrors","item_id","log","updateQuantity","productId","change","currentQuantity","stockQuantity","setTimeout","body","JSON","stringify","product_id","removeFromCart","handleCheckout","handlePinCodeChange","e","target","value","name","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","item","price","onClick","total_price","type","onBlur","placeholder","required","onChange","readOnly","disabled","_c","$RefreshReg$"],"sources":["/home/tanish/Documents/database lab/lab5-files/frontend/src/pages/Cart.jsx"],"sourcesContent":["import React, { useState, useEffect, use } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Navbar from \"../components/Navbar\";\nimport { apiUrl } from \"../config/config\";\nimport \"../css/Cart.css\";\n\nconst Cart = () => {\n\tconst navigate = useNavigate();\n\t// TODO: Implement the checkStatus function\n\t// If the user is already logged in, fetch the cart.\n\t// If not, redirect to the login page.\n\tuseEffect(() => {\n\t\tconst checkStatus = async () => {\n\t\t\t// Implement your logic to check if the user is logged in\n\t\t\t// If logged in, fetch the cart data, otherwise navigate to /login\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(`${apiUrl}/isLoggedIn`,\n\t\t\t\t\t{\n\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\tcredentials: \"include\",\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tfetchCart();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn navigate('/login');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t\treturn navigate('/notfound');\n\t\t\t}\n\t\t};\n\t\tcheckStatus();\n\t}, []);\n\n\t// TODO: Manage cart state with useState\n\t// cart: Stores the items in the cart\n\tconst [cart, setCart] = useState([]);\n\t// totalPrice: Stores the total price of all cart items\n\tconst [totalPrice, setTotalPrice] = useState(0);\n\t// error: Stores any error messages (if any)\n\tconst [error, setError] = useState(null);\n\t// message: Stores success or info messages\n\tconst [message, setMessage] = useState(null);\n\n\tconst [errors,seterrors] = useState({});\n\tconst [formData, setFormData] = useState({\n\t\tpincode: \"\",\n\t\tstate: \"\",\n\t\tcity: \"\",\n\t\tstreet: \"\",\n\t  });\n\tconst [formerror, setformerror] = useState(null);\n\n\t// TODO: Implement the fetchCart function\n\t// This function should fetch the user's cart data and update the state variables\n\tconst fetchCart = async () => {\n\t\t// Implement your logic to fetch the cart data\n\t\t// Use the API endpoint to get the user's cart\n\t\ttry {\n\t\t\tconst response = await fetch(`${apiUrl}/display-cart`,{\n\t\t\t\tmethod : \"GET\",\n\t\t\t\tcredentials : \"include\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\" : \"application/json\"\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst data = await response.json();\n\t\t\tif(response.ok){\n\t\t\t\tsetTotalPrice(data.totalPrice);\n\t\t\t\tsetCart(data.cart);\n\t\t\t\tsetError(null);\n\t\t\t\tfor(const row of data.cart){\n\t\t\t\t\tif(row.quantity > row.stock_quantity){\n\t\t\t\t\t\tseterrors((preverrors)=>({...preverrors,[row.item_id]:\"Exceeds stock quantity\"}));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tsetError(data.message);\n\t\t\t}\n\t\t\tsetMessage(data.message);\n\t\t}catch(error){\n\t\t\tconsole.log(error);\n\t\t\treturn navigate('/notfound');\n\t\t}\n  };\n\n\t// TODO: Implement the updateQuantity function\n\t// This function should handle increasing or decreasing item quantities\n\t// based on user input. Make sure it doesn't exceed stock limits.\n\tconst updateQuantity = async (productId, change, currentQuantity, stockQuantity) => {\n\t\t// Implement your logic for quantity update\n\t\t// Validate quantity bounds and update the cart via API\n\t\tif(currentQuantity + change > stockQuantity){\n\t\t\tseterrors((preverrors)=>({...preverrors,[productId]:\"Exceeds stock quantity\"}));\n\t\t\tsetTimeout(() => {\n\t\t\t\tseterrors({\n\t\t\t\t  ...errors,\n\t\t\t\t  [productId]: null,\n\t\t\t\t});\n\t\t\t  }, 3000);\n\t\t}\n\t\telse{\n\t\t\tseterrors((preverrors)=>({...preverrors,[productId]:null}));\n\t\t}\n\n\t\tif(currentQuantity + change <= stockQuantity || change===-1){\n\t\t\ttry{\n\t\t\t\tconst response = await fetch(`${apiUrl}/update-cart`,{\n\t\t\t\t\tmethod : \"POST\" ,\n\t\t\t\t\tcredentials : \"include\",\n\t\t\t\t\theaders : {\n\t\t\t\t\t\t\"Content-Type\" : \"application/json\"\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tproduct_id : productId,\n\t\t\t\t\t\tquantity : change \n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\tconst data = await response.json();\n\t\t\t\tif(!response.ok){\n\t\t\t\t\tsetError(data.message);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsetError(null);\n\t\t\t\t\tfetchCart();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}catch(error){\n\t\t\t\tconsole.log(error);\n\t\t\t\treturn navigate(\"/notfound\");\n\t\t\t}\n\n\t\t}\n\t};\n\n\t// TODO: Implement the removeFromCart function\n\t// This function should remove an item from the cart when the \"Remove\" button is clicked\n\tconst removeFromCart = async (productId) => {\n\t\t// Implement your logic to remove an item from the cart\n\t\t// Use the appropriate API call to handle this\n\t\ttry{\n\t\t\tconst response = await fetch(`${apiUrl}/remove-from-cart`,{\n\t\t\t\tmethod : \"POST\",\n\t\t\t\tcredentials : \"include\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\" : \"application/json\"\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tproduct_id : productId\n\t\t\t\t})\n\t\t\t});\n\t\t\tconst data = await response.json();\n\t\t\tif(!response.ok){\n\t\t\t\tconsole.log(data.message);\n\t\t\t\tsetError(data.message);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsetError(null);\n\t\t\t\tfetchCart();\n\t\t\t}\n\t\t}catch(error){\n\t\t\tconsole.log(error);\n\t\t\treturn navigate(\"/notfound\");\n\t\t}\n\t};\n\n\t// TODO: Implement the handleCheckout function\n\t// This function should handle the checkout process and validate the address fields\n\t// If the user is ready to checkout, place the order and navigate to order confirmation\n\tconst handleCheckout = async () => {\n\t\t// Implement your logic for checkout, validate address and place order\n\t\t// Make sure to clear the cart after successful checkout\n\t\ttry{\n\t\t\tconst response = await fetch(`${apiUrl}/place-order`,{\n\t\t\t\tmethod : \"POST\",\n\t\t\t\tcredentials : \"include\",\n\t\t\t\theaders : {\n\t\t\t\t\t\"Content-Type\" : \"application/json\"\n\t\t\t\t},\n\t\t\t\tbody: {\n\t\t\t\t\tcity : formData.city,\n\t\t\t\t\tstate : formData.state,\n\t\t\t\t\tpincode : formData.pincode,\n\t\t\t\t\tstreet : formData.street\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst data = await response.json();\n\n\t\t\tif(response.ok){\n\t\t\t\treturn navigate(\"/order-confirmation\");\n\t\t\t}\t\n\t\t\telse{\n\t\t\t\tsetError(data.message);\n\t\t\t}\n\t\t}catch(error){\n\t\t\tconsole.log(error);\n\t\t\tnavigate(\"/notfound\");\n\t\t}\n\t};\n\n\t// TODO: Implement the handlePinCodeChange function\n\t// This function should fetch the city and state based on pincode entered by the user\n\tconst handlePinCodeChange = async (e) => {\n\t\t// Implement the logic to fetch city and state by pincode\n\t\t// Update the city and state fields accordingly\n\t\tsetFormData({...formData,pincode: e.target.value});\n\t\ttry{\n\t\t\tconst response = await fetch(`${apiUrl}/fetch-pincode?pincode=${e.target.value}`,{\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tcredentials: \"include\",\n\t\t\t\theaders : {\n\t\t\t\t\t\"Content-Type\" : \"application/json\"\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tconst data = await response.json();\n\n\t\t\tif(response.ok){\n\t\t\t\tsetFormData({...formData,state: data.state, city: data.name});\n\t\t\t\tsetformerror(null);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsetformerror(\"Invalid PINCODE\");\n\t\t\t}\n\t\t}catch(error){\n\t\t\tconsole.log(error);\n\t\t\treturn navigate(\"/notfound\");\n\t\t}\n\t};\n\n\t// TODO: Display error messages if any error occurs\n\tif (error) {\n\t\treturn (\n\t\t\t<>\n\t\t\t<Navbar />\n\t\t\t<div className=\"cart-error\">{error}</div>\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\t<Navbar />\n\t\t\t<div className=\"cart-container\">\n\t\t\t\t<h1>Your Cart</h1>\n\n\t\t\t\t{/* TODO: Display the success or info message */}\n\t\t\t\t{message && <div className=\"cart-message\">{message}</div>}\n\n\t\t\t\t{/* TODO: Implement the cart table UI */}\n\t\t\t\t{/* If cart is empty, display an empty cart message */}\n\t\t\t\t{cart.length === 0 ? (\n\t\t\t\t\t<p className=\"empty-cart-message\">Your cart is empty</p>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<table className=\"cart-table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Product</th>\n\t\t\t\t\t\t\t\t\t<th>Price</th>\n\t\t\t\t\t\t\t\t\t<th>Stock Available</th>\n\t\t\t\t\t\t\t\t\t<th>Quantity</th>\n\t\t\t\t\t\t\t\t\t<th>Total</th>\n\t\t\t\t\t\t\t\t\t<th>Actions</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{/* TODO: Render cart items dynamically */}\n\t\t\t\t\t\t\t\t{/* Use map() to render each cart item */}\n\t\t\t\t\t\t\t\t{cart.map((item) => (\n\t\t\t\t\t\t\t\t\t<tr key={item.item_id}>\n\t\t\t\t\t\t\t\t\t\t{/* TODO: Render product details here */}\n\t\t\t\t\t\t\t\t\t\t{/* Display item name, price, stock, quantity, and total */}\n\t\t\t\t\t\t\t\t\t\t<td>{item.name}</td><td>{item.price}</td><td>{item.stock_quantity}</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={()=>updateQuantity(item.item_id,1,item.quantity,item.stock_quantity)}>+</button>\n\t\t\t\t\t\t\t\t\t\t\t{item.quantity}\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={()=>updateQuantity(item.item_id,-1,item.quantity,item.stock_quantity)}>-</button>\n\t\t\t\t\t\t\t\t\t\t\t{errors[item.item_id] && <p>{errors[item.item_id]}</p>}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td>{item.total_price}</td><td><button onClick={()=>(removeFromCart(item.item_id))}>Remove</button></td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\n\t\t\t\t\t\t{/* TODO: Implement the address form */}\n\t\t\t\t\t\t{/* Allow users to input pincode, street, city, and state */}\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t{/* Implement address fields */}\n\t\t\t\t\t\t\t<label>Pincode:</label><input type=\"text\" name=\"pincode\" onBlur={handlePinCodeChange} placeholder=\"Enter pincode\" required/><br/>\n\t\t\t\t\t\t\t{formerror && <p>{formerror}</p>}\n\t\t\t\t\t\t\t<label>Street:</label><input type=\"text\" name=\"street\" onChange={(e)=>setFormData({...formData,[e.target.name]:e.target.value})} placeholder=\"Enter street\"required/><br/>\n\t\t\t\t\t\t\t<label>City:</label><input type=\"text\" name=\"city\" value={formData.city} placeholder=\"Enter city\" readOnly/><br/>\n\t\t\t\t\t\t\t<label>State:</label><input type=\"text\" name=\"state\" value={formData.state} placeholder=\"Enter state\" readOnly/><br/>\n\t\t\t\t\t\t</form>\n\n\t\t\t\t\t\t{/* TODO: Display total price and the checkout button */}\n\t\t\t\t\t\t<div className=\"cart-total\">\n\t\t\t\t\t\t\t{/* Display the total price */}\n\t\t\t\t\t\t\t<h3>Total: ${totalPrice}</h3>\n\t\t\t\t\t\t\t{/* Checkout button should be enabled only if there are items in the cart */}\n\t\t\t\t\t\t\t{cart.length > 0 ? <button onClick={handleCheckout} disabled={cart.length === 0}>Proceed to Checkout</button>:\"\"}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Cart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}